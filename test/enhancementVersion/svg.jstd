travi.test.testCase('SVG Support Detection', (function () {
    'use strict';

    var enhancements = travi.enhancements,
        cookies = travi.cookies,
        browserProxy = travi.browserProxy;

    return {
        setUp: function () {
            sinon.stub(cookies, 'value');
            sinon.stub(cookies, 'create');
            sinon.stub(cookies, 'exists').withArgs(enhancements.constants.get().ENHANCEMENT_VERSION_KEY).returns(false);
            sinon.stub(browserProxy, 'refresh');
        },

        tearDown: function () {
            travi.test.common.restore([
                cookies.create,
                cookies.value,
                cookies.exists,
                browserProxy.refresh
            ]);
            Modernizr.svg = null;
        },

        'test that cookie created for svg capability when svg is supported by the browser': function () {
            Modernizr.svg = true;

            enhancements.detection.init();

            assert.calledWith(
                cookies.create,
                'svg',
                't',
                enhancements.constants.get().DAYS_BEFORE_ENHANCEMENT_COOKIE_EXPIRATION
            );
            refute(browserProxy.refresh.calledBefore(cookies.create));
        },

        'test that cookie created for svg capability when svg not supported by browser': function () {
            Modernizr.svg = false;

            enhancements.detection.init();

            assert.calledWith(
                cookies.create,
                'svg',
                'f',
                enhancements.constants.get().DAYS_BEFORE_ENHANCEMENT_COOKIE_EXPIRATION
            );
        },

        'test that cookie is only created if enhancement-version cookie does not already exist': function () {
            cookies.exists.withArgs(enhancements.constants.get().ENHANCEMENT_VERSION_KEY).returns(true);

            enhancements.detection.init();

            refute.called(cookies.create);
        }
    };
}()));